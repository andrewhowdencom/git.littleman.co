---
# Generated by Boilr at
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    application: "gogs"
    role: "application"
  name: "gogs-deployment"
  namespace: "git-littleman-co"
spec:
  replicas: 1
  selector:
    matchLabels:
      application: "gogs"
      role: "application"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        application: "gogs"
        role: "application"
    spec:
      volumes:
        - name: "data"
          gcePersistentDisk:
            pdName: "git-littleman-co-gogs-data"
            fsType: "ext4"
        - name: "gogs-etc-tls"
          secret:
            secretName: "gogs-etc-tls"
      containers:
      - name: "gogs"
        env:
        - name: "SOCAT_LINK"
          value: "false"
        image: "gogs/gogs:{{GOGS_VERSION}}"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 22
          protocol: "TCP"
        - containerPort: 3000
          protocol: "TCP"
        volumeMounts:
          - name: "data"
            readOnly: false
            mountPath: "/data"
        livenessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 5
          timeoutSeconds: 1
      - name: "nginx"
        image: "gcr.io/littleman-co/git-littleman-co-nginx:{{GIT_HASH}}"
        ports:
           - containerPort: 80
             protocol: "TCP"
           - containerPort: 443
             protocol: "TCP"
        volumeMounts:
          - name: "gogs-etc-tls"
            readOnly: true
            mountPath: "/etc/tls"
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
      restartPolicy: "Always"
      securityContext: {}
